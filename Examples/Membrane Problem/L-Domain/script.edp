// Problem 1:  -(u_xx + u_yy) = f(x,y) = 0 on Omega,   u = g = xy on Gamma (profile.txt)
// Problem 1:  -(u_xx + u_yy) = f(x,y) = 2*pi^2*sin(pi*x)*cos(pi*y) on Omega,   u = g on Gamma (profile1.txt)

border g1(t=-1,0){x=t;y=-1;};
border g2(t=-1,0){x=0;y=t;};
border g3(t=0,1){x=t;y=0;};
border g4(t=0,1){x=1;y=t;};
border g5(t=1,-1){x=t;y=1;};
border g6(t=1,-1){x=-1;y=t;};

mesh Th = buildmesh(g1(20)+g2(20)+g3(20)+g4(20)+g5(20)+g6(20));

plot(Th,wait=true);

fespace Vh(Th,P1);

Vh u,v;

func f = 2*pi^2*sin(pi*x)*cos(pi*y);
func  g = sin(pi*x)*cos(pi*y);

problem Poisson(u,v) = int2d(Th)(dx(u)*dx(v)+dy(u)*dy(v)) - int2d(Th)(f*v) + on(g1,g5,u=-sin(pi*x)) + on(g2,g4,g6,u=0)
																		   + on(g3,u=sin(pi*x));
Poisson;

ofstream ff("profile1.txt");
for (int i=0; i<Th.nt; i++)
{
	for(int j=0; j<3; j++)
	{
		ff<<Th[i][j].x<<" "<<Th[i][j].y<<" "<<u[][Vh(i,j)]<<endl;
	}
	ff<<Th[i][0].x<<" "<<Th[i][0].y<<" "<<u[][Vh(i,0)]<<"\n\n\n";
}

Vh ue = g;
plot(u,wait = true,value = true);
plot(ue,wait = true,value = true);
